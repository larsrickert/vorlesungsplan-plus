{"version":3,"sources":["webpack:///src/app/pages/timetable/timetable-routing.module.ts","webpack:///src/app/pages/timetable/timetable.page.ts","webpack:///src/app/pages/timetable/timetable.module.ts","webpack:///src/app/pages/timetable/timetable.page.scss","webpack:///src/app/pages/timetable/timetable.page.html"],"names":["routes","path","component","TimetablePageRoutingModule","imports","forChild","exports","TimetablePage","utility","storage","blocks","displayedBlocks","lastUpdated","course","counts","hasChanges","getSetting","COURSE","lectures","subscribe","createBlocks","LASTUPDATED","count","fetchLectures","ev","fetched","target","complete","showToast","searchedValue","value","toLowerCase","setDisplayedBlocksToSegment","trim","segment","results","forEach","block","matchingLectures","items","filter","lecture","match","name","includes","lecturer","room","length","push","date","blocksToShow","matches","item","isExam","status","REMOVED","selector","template","TimetablePageModule","declarations"],"mappings":"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","file":"pages-timetable-timetable-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TimetablePage } from './timetable.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TimetablePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TimetablePageRoutingModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ILectureBlock } from 'src/app/interfaces/IBlock';\nimport { LectureStatus } from 'src/app/interfaces/ILecture';\nimport { SettingKey } from 'src/app/interfaces/ISetting';\nimport { StorageService } from 'src/app/services/storage/storage.service';\nimport { UtilityService } from 'src/app/services/utility/utility.service';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.page.html',\n  styleUrls: ['./timetable.page.scss'],\n})\nexport class TimetablePage implements OnInit {\n  @ViewChild('segment') segment: HTMLIonSegmentElement;\n  @ViewChild('searchBar') searchBar: HTMLIonSearchbarElement;\n\n  blocks: ILectureBlock[] = [];\n  displayedBlocks: ILectureBlock[] = [];\n  lastUpdated = null;\n  course = '';\n\n  // 0: lectures\n  // 1: exams\n  // 2: changes\n  // 3: presence\n  counts = [0, 0, 0, 0];\n  hasChanges = false;\n\n  constructor(\n    private utility: UtilityService,\n    private storage: StorageService\n  ) {}\n\n  ngOnInit() {\n    const course = this.storage.getSetting(SettingKey.COURSE);\n    this.course = course ? course : '';\n\n    this.storage.lectures.subscribe((lectures) => {\n      this.blocks = <ILectureBlock[]>this.utility.createBlocks(lectures);\n      this.displayedBlocks = this.blocks;\n      this.lastUpdated = this.storage.getSetting(SettingKey.LASTUPDATED);\n      this.count();\n    });\n\n    this.storage.fetchLectures();\n  }\n\n  async refresh(ev: any): Promise<void> {\n    const fetched = await this.storage.fetchLectures();\n    ev.target.complete();\n\n    if (fetched) {\n      this.utility.showToast('Vorlesungen aktualisiert.');\n    } else {\n      this.utility.showToast(\n        'Die Vorlesungen konnten nicht aktualisiert werden. Bitte überprüfe deine Internetverbindung und Kurseinstellungen.'\n      );\n    }\n  }\n\n  // sets current displayed blocks to blocks that contain the searched value\n  search(ev: any): void {\n    let searchedValue = ev.target.value.toLowerCase();\n\n    if (searchedValue === '') {\n      // display blocks of active segment when search is canceled or cleared\n      return this.setDisplayedBlocksToSegment();\n    } else if (searchedValue.trim() === '') {\n      // do nothing when empty search input is entered\n      return;\n    }\n\n    searchedValue = searchedValue.trim();\n    this.segment.value = 'all';\n\n    const results: ILectureBlock[] = [];\n\n    // add all blocks to results where lectures contain searched value in name, lecturer or room\n    this.blocks.forEach((block) => {\n      const matchingLectures = block.items.filter((lecture) => {\n        let match = false;\n\n        if (lecture.name.toLowerCase().includes(searchedValue)) {\n          match = true;\n        }\n\n        if (\n          lecture.lecturer &&\n          lecture.lecturer.toLowerCase().includes(searchedValue)\n        ) {\n          match = true;\n        }\n\n        if (\n          lecture.room &&\n          lecture.room.toLowerCase().includes(searchedValue)\n        ) {\n          match = true;\n        }\n\n        return match;\n      });\n\n      if (matchingLectures.length > 0) {\n        results.push({ date: block.date, items: matchingLectures });\n      }\n    });\n\n    this.displayedBlocks = results;\n  }\n\n  // sets current displayed blocks depending on the segment value\n  setDisplayedBlocksToSegment(): void {\n    if (!this.segment || this.segment.value === 'all') {\n      // display all blocks\n      this.displayedBlocks = this.blocks;\n      return;\n    }\n\n    let blocksToShow: ILectureBlock[] = [];\n\n    switch (this.segment.value) {\n      case 'exams':\n        // only display blocks that contain exams\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return this.utility.isExam(item) && item.status !== 'removed';\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      case 'changes':\n        // only display lectures that have changes (have a status)\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return item.status;\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      case 'presence':\n        // only display lectures that have a room\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return item.room;\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      default:\n        // display all blocks\n        blocksToShow = this.blocks;\n        break;\n    }\n\n    this.displayedBlocks = blocksToShow;\n  }\n\n  count(): void {\n    const counts = [0, 0, 0, 0];\n    // 0: lectures\n    // 1: exams\n    // 2: changes\n    // 3: presence\n\n    this.blocks.forEach((block) => {\n      block.items.forEach((lecture) => {\n        if (\n          this.utility.isExam(lecture) &&\n          lecture.status !== LectureStatus.REMOVED\n        ) {\n          counts[1]++;\n        }\n        if (lecture.status !== LectureStatus.REMOVED) {\n          counts[0]++;\n        }\n        if (lecture.status) {\n          counts[2]++;\n        }\n        if (lecture.room && lecture.status !== LectureStatus.REMOVED) {\n          counts[3]++;\n        }\n      });\n    });\n\n    this.counts = counts;\n    this.hasChanges = counts[2] > 0;\n\n    if (!this.hasChanges && this.segment && this.segment.value === 'changes') {\n      this.segment.value = 'all';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TimetablePageRoutingModule } from './timetable-routing.module';\n\nimport { TimetablePage } from './timetable.page';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TimetablePageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [TimetablePage],\n})\nexport class TimetablePageModule {}\n","export default \"ion-searchbar {\\n  margin-bottom: 16px;\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n\\nion-segment {\\n  margin-bottom: 40px;\\n}\\n\\n.examInfo__wrapper {\\n  display: flex;\\n  align-items: center;\\n  color: var(--ion-color-primary);\\n  margin-bottom: 20px;\\n  outline: 0;\\n  cursor: pointer;\\n}\\n\\n.examInfo__wrapper ion-icon {\\n  font-size: 30px;\\n  margin-right: 10px;\\n  min-width: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGltZXRhYmxlL3RpbWV0YWJsZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLCtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUNFO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGltZXRhYmxlL3RpbWV0YWJsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VhcmNoYmFyIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gIHBhZGRpbmctbGVmdDogMDtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG59XHJcblxyXG5pb24tc2VnbWVudCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufVxyXG5cclxuLmV4YW1JbmZvX193cmFwcGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICBpb24taWNvbiB7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBtaW4td2lkdGg6IDMwcHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\";","export default \"<app-header title=\\\"Vorlesungsplan {{ course }}\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <!-- refresher -->\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content\\n      pullingIcon=\\\"chevron-down-outline\\\"\\n      pullingText=\\\"zuletzt aktualisiert: {{ lastUpdated | date:'medium' }}\\\"\\n      refreshingSpinner=\\\"crescent\\\"\\n      refreshingText=\\\"Vorlesungen werden geladen...\\\"\\n    >\\n    </ion-refresher-content>\\n  </ion-refresher>\\n\\n  <!-- searchbar -->\\n  <ion-searchbar\\n    animated\\n    showCancelButton=\\\"focus\\\"\\n    mode=\\\"ios\\\"\\n    placeholder=\\\"Suchen...\\\"\\n    cancelButtonText=\\\"Abbrechen\\\"\\n    (ionChange)=\\\"search($event)\\\"\\n    #searchBar\\n  ></ion-searchbar>\\n\\n  <div\\n    class=\\\"examInfo__wrapper\\\"\\n    *ngIf=\\\"segment && segment.value === 'exams'\\\"\\n    routerLink=\\\"/report\\\"\\n  >\\n    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n    <span\\n      >Falsche oder fehlende Klausur gefunden? Klicke hier, um die\\n      Klausurerkennung zu verbessern.</span\\n    >\\n  </div>\\n\\n  <!-- Segment -->\\n  <ion-segment\\n    class=\\\"segment\\\"\\n    scrollable\\n    (ionChange)=\\\"setDisplayedBlocksToSegment()\\\"\\n    mode=\\\"ios\\\"\\n    #segment\\n    value=\\\"all\\\"\\n  >\\n    <ion-segment-button value=\\\"changes\\\" *ngIf=\\\"hasChanges\\\">\\n      <ion-label>Änderungen ({{ counts[2] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"all\\\">\\n      <ion-label>Alle ({{ counts[0] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"presence\\\" *ngIf=\\\"counts[3] !== counts[0]\\\">\\n      <ion-label>Präsenz ({{ counts[3] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"exams\\\">\\n      <ion-label>Klausuren ({{ counts[1] }})</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <!-- No results for search message -->\\n  <div\\n    *ngIf=\\\"displayedBlocks.length === 0 && course && blocks.length > 0\\\"\\n    class=\\\"wrapper\\\"\\n  >\\n    Deine Suche hat keine Treffer ergeben.\\n  </div>\\n\\n  <!-- No lectures message -->\\n  <div *ngIf=\\\"course && blocks.length === 0\\\" class=\\\"wrapper\\\">\\n    Für den Kurs {{ course }} sind keine Vorlesungen eingetragen.\\n  </div>\\n\\n  <div\\n    class=\\\"warning warning--clickable\\\"\\n    *ngIf=\\\"!course\\\"\\n    routerLink=\\\"/settings\\\"\\n  >\\n    <ion-icon name=\\\"alert-circle\\\"></ion-icon>\\n    <ion-label>Bitte wähle einen Kurs aus.</ion-label>\\n  </div>\\n\\n  <!-- Skeleton -->\\n  <div class=\\\"block\\\" *ngIf=\\\"!course\\\">\\n    <app-block skeleton=\\\"lecture\\\"></app-block>\\n  </div>\\n\\n  <app-block *ngFor=\\\"let block of displayedBlocks\\\" [block]=\\\"block\\\"></app-block>\\n</ion-content>\\n\\n<app-lecture-status-fab></app-lecture-status-fab>\\n\";"]}