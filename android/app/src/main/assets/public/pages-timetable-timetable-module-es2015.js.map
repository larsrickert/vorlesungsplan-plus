{"version":3,"sources":["./src/app/pages/timetable/timetable-routing.module.ts","./src/app/pages/timetable/timetable.page.ts","./src/app/pages/timetable/timetable.module.ts","./src/app/pages/timetable/timetable.page.scss","./src/app/pages/timetable/timetable.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AChBsB;AAED;AACH;AACiB;AACA;IAO7D,aAAa,SAAb,aAAa;IAgBxB,YACU,OAAuB,EACvB,OAAuB;QADvB,YAAO,GAAP,OAAO,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAgB;QAdjC,WAAM,GAAoB,EAAE,CAAC;QAC7B,oBAAe,GAAoB,EAAE,CAAC;QACtC,gBAAW,GAAG,IAAI,CAAC;QACnB,WAAM,GAAG,EAAE,CAAC;QAEZ,cAAc;QACd,WAAW;QACX,aAAa;QACb,cAAc;QACd,WAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;IAKhB,CAAC;IAEJ,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,sEAAU,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QAEnC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC3C,IAAI,CAAC,MAAM,GAAoB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;YACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,sEAAU,CAAC,WAAW,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;IAEK,OAAO,CAAC,EAAO;;YACnB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YACnD,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAErB,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;aACrD;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,SAAS,CACpB,oHAAoH,CACrH,CAAC;aACH;QACH,CAAC;KAAA;IAED,0EAA0E;IAC1E,MAAM,CAAC,EAAO;QACZ,IAAI,aAAa,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAElD,IAAI,aAAa,KAAK,EAAE,EAAE;YACxB,sEAAsE;YACtE,OAAO,IAAI,CAAC,2BAA2B,EAAE,CAAC;SAC3C;aAAM,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACtC,gDAAgD;YAChD,OAAO;SACR;QAED,aAAa,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAE3B,MAAM,OAAO,GAAoB,EAAE,CAAC;QAEpC,4FAA4F;QAC5F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5B,MAAM,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;gBACtD,IAAI,KAAK,GAAG,KAAK,CAAC;gBAElB,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;oBACtD,KAAK,GAAG,IAAI,CAAC;iBACd;gBAED,IACE,OAAO,CAAC,QAAQ;oBAChB,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EACtD;oBACA,KAAK,GAAG,IAAI,CAAC;iBACd;gBAED,IACE,OAAO,CAAC,IAAI;oBACZ,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAClD;oBACA,KAAK,GAAG,IAAI,CAAC;iBACd;gBAED,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;IACjC,CAAC;IAED,+DAA+D;IAC/D,2BAA2B;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,KAAK,EAAE;YACjD,qBAAqB;YACrB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;YACnC,OAAO;SACR;QAED,IAAI,YAAY,GAAoB,EAAE,CAAC;QAEvC,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAC1B,KAAK,OAAO;gBACV,yCAAyC;gBACzC,YAAY,GAAG,EAAE,CAAC;gBAElB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;wBAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;oBAChE,CAAC,CAAC,CAAC;oBAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtB,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;qBACzD;gBACH,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,SAAS;gBACZ,0DAA0D;gBAC1D,YAAY,GAAG,EAAE,CAAC;gBAElB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;wBAC1C,OAAO,IAAI,CAAC,MAAM,CAAC;oBACrB,CAAC,CAAC,CAAC;oBAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtB,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;qBACzD;gBACH,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,UAAU;gBACb,yCAAyC;gBACzC,YAAY,GAAG,EAAE,CAAC;gBAElB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAC5B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;wBAC1C,OAAO,IAAI,CAAC,IAAI,CAAC;oBACnB,CAAC,CAAC,CAAC;oBAEH,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtB,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;qBACzD;gBACH,CAAC,CAAC,CAAC;gBACH,MAAM;YACR;gBACE,qBAAqB;gBACrB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,MAAM;SACT;QAED,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,KAAK;QACH,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,cAAc;QACd,WAAW;QACX,aAAa;QACb,cAAc;QAEd,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5B,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC9B,IACE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;oBAC5B,OAAO,CAAC,MAAM,KAAK,yEAAa,CAAC,OAAO,EACxC;oBACA,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;iBACb;gBACD,IAAI,OAAO,CAAC,MAAM,KAAK,yEAAa,CAAC,OAAO,EAAE;oBAC5C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;iBACb;gBACD,IAAI,OAAO,CAAC,MAAM,EAAE;oBAClB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;iBACb;gBACD,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,yEAAa,CAAC,OAAO,EAAE;oBAC5D,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;iBACb;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;YACxE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;CACF;;YA1MQ,uFAAc;YADd,uFAAc;;;sBASpB,uDAAS,SAAC,SAAS;wBACnB,uDAAS,SAAC,WAAW;;AAFX,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,iFAAoC;;KAErC,CAAC;GACW,aAAa,CAmMzB;AAnMyB;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AACM;AACF;AAEA;AAE2B;AAEvB;AACmB;IAYvD,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAV/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oFAA0B;YAC1B,iFAAY;SACb;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACrBhC;AAAe,+EAAgB,wBAAwB,oBAAoB,qBAAqB,GAAG,iBAAiB,wBAAwB,GAAG,wBAAwB,kBAAkB,wBAAwB,oCAAoC,wBAAwB,eAAe,oBAAoB,GAAG,iCAAiC,oBAAoB,uBAAuB,oBAAoB,GAAG,6CAA6C,+9BAA+9B,E;;;;;;;;;;;;ACAl6C;AAAe,qGAAsC,UAAU,sQAAsQ,+BAA+B,q/BAAq/B,aAAa,2GAA2G,aAAa,qJAAqJ,aAAa,kHAAkH,aAAa,qYAAqY,UAAU,4iBAA4iB,E","file":"pages-timetable-timetable-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TimetablePage } from './timetable.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TimetablePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TimetablePageRoutingModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ILectureBlock } from 'src/app/interfaces/IBlock';\nimport { LectureStatus } from 'src/app/interfaces/ILecture';\nimport { SettingKey } from 'src/app/interfaces/ISetting';\nimport { StorageService } from 'src/app/services/storage/storage.service';\nimport { UtilityService } from 'src/app/services/utility/utility.service';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.page.html',\n  styleUrls: ['./timetable.page.scss'],\n})\nexport class TimetablePage implements OnInit {\n  @ViewChild('segment') segment: HTMLIonSegmentElement;\n  @ViewChild('searchBar') searchBar: HTMLIonSearchbarElement;\n\n  blocks: ILectureBlock[] = [];\n  displayedBlocks: ILectureBlock[] = [];\n  lastUpdated = null;\n  course = '';\n\n  // 0: lectures\n  // 1: exams\n  // 2: changes\n  // 3: presence\n  counts = [0, 0, 0, 0];\n  hasChanges = false;\n\n  constructor(\n    private utility: UtilityService,\n    private storage: StorageService\n  ) {}\n\n  ngOnInit() {\n    const course = this.storage.getSetting(SettingKey.COURSE);\n    this.course = course ? course : '';\n\n    this.storage.lectures.subscribe((lectures) => {\n      this.blocks = <ILectureBlock[]>this.utility.createBlocks(lectures);\n      this.displayedBlocks = this.blocks;\n      this.lastUpdated = this.storage.getSetting(SettingKey.LASTUPDATED);\n      this.count();\n    });\n\n    this.storage.fetchLectures();\n  }\n\n  async refresh(ev: any): Promise<void> {\n    const fetched = await this.storage.fetchLectures();\n    ev.target.complete();\n\n    if (fetched) {\n      this.utility.showToast('Vorlesungen aktualisiert.');\n    } else {\n      this.utility.showToast(\n        'Die Vorlesungen konnten nicht aktualisiert werden. Bitte überprüfe deine Internetverbindung und Kurseinstellungen.'\n      );\n    }\n  }\n\n  // sets current displayed blocks to blocks that contain the searched value\n  search(ev: any): void {\n    let searchedValue = ev.target.value.toLowerCase();\n\n    if (searchedValue === '') {\n      // display blocks of active segment when search is canceled or cleared\n      return this.setDisplayedBlocksToSegment();\n    } else if (searchedValue.trim() === '') {\n      // do nothing when empty search input is entered\n      return;\n    }\n\n    searchedValue = searchedValue.trim();\n    this.segment.value = 'all';\n\n    const results: ILectureBlock[] = [];\n\n    // add all blocks to results where lectures contain searched value in name, lecturer or room\n    this.blocks.forEach((block) => {\n      const matchingLectures = block.items.filter((lecture) => {\n        let match = false;\n\n        if (lecture.name.toLowerCase().includes(searchedValue)) {\n          match = true;\n        }\n\n        if (\n          lecture.lecturer &&\n          lecture.lecturer.toLowerCase().includes(searchedValue)\n        ) {\n          match = true;\n        }\n\n        if (\n          lecture.room &&\n          lecture.room.toLowerCase().includes(searchedValue)\n        ) {\n          match = true;\n        }\n\n        return match;\n      });\n\n      if (matchingLectures.length > 0) {\n        results.push({ date: block.date, items: matchingLectures });\n      }\n    });\n\n    this.displayedBlocks = results;\n  }\n\n  // sets current displayed blocks depending on the segment value\n  setDisplayedBlocksToSegment(): void {\n    if (!this.segment || this.segment.value === 'all') {\n      // display all blocks\n      this.displayedBlocks = this.blocks;\n      return;\n    }\n\n    let blocksToShow: ILectureBlock[] = [];\n\n    switch (this.segment.value) {\n      case 'exams':\n        // only display blocks that contain exams\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return this.utility.isExam(item) && item.status !== 'removed';\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      case 'changes':\n        // only display lectures that have changes (have a status)\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return item.status;\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      case 'presence':\n        // only display lectures that have a room\n        blocksToShow = [];\n\n        this.blocks.forEach((block) => {\n          const matches = block.items.filter((item) => {\n            return item.room;\n          });\n\n          if (matches.length > 0) {\n            blocksToShow.push({ date: block.date, items: matches });\n          }\n        });\n        break;\n      default:\n        // display all blocks\n        blocksToShow = this.blocks;\n        break;\n    }\n\n    this.displayedBlocks = blocksToShow;\n  }\n\n  count(): void {\n    const counts = [0, 0, 0, 0];\n    // 0: lectures\n    // 1: exams\n    // 2: changes\n    // 3: presence\n\n    this.blocks.forEach((block) => {\n      block.items.forEach((lecture) => {\n        if (\n          this.utility.isExam(lecture) &&\n          lecture.status !== LectureStatus.REMOVED\n        ) {\n          counts[1]++;\n        }\n        if (lecture.status !== LectureStatus.REMOVED) {\n          counts[0]++;\n        }\n        if (lecture.status) {\n          counts[2]++;\n        }\n        if (lecture.room && lecture.status !== LectureStatus.REMOVED) {\n          counts[3]++;\n        }\n      });\n    });\n\n    this.counts = counts;\n    this.hasChanges = counts[2] > 0;\n\n    if (!this.hasChanges && this.segment && this.segment.value === 'changes') {\n      this.segment.value = 'all';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TimetablePageRoutingModule } from './timetable-routing.module';\n\nimport { TimetablePage } from './timetable.page';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TimetablePageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [TimetablePage],\n})\nexport class TimetablePageModule {}\n","export default \"ion-searchbar {\\n  margin-bottom: 16px;\\n  padding-left: 0;\\n  padding-right: 0;\\n}\\n\\nion-segment {\\n  margin-bottom: 40px;\\n}\\n\\n.examInfo__wrapper {\\n  display: flex;\\n  align-items: center;\\n  color: var(--ion-color-primary);\\n  margin-bottom: 20px;\\n  outline: 0;\\n  cursor: pointer;\\n}\\n\\n.examInfo__wrapper ion-icon {\\n  font-size: 30px;\\n  margin-right: 10px;\\n  min-width: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGltZXRhYmxlL3RpbWV0YWJsZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLCtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUNFO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGltZXRhYmxlL3RpbWV0YWJsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tc2VhcmNoYmFyIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG5pb24tc2VnbWVudCB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG5cbi5leGFtSW5mb19fd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIG91dGxpbmU6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcblxuICBpb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBtaW4td2lkdGg6IDMwcHg7XG4gIH1cbn1cbiJdfQ== */\";","export default \"<app-header title=\\\"Vorlesungsplan {{ course }}\\\"></app-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <!-- refresher -->\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content\\n      pullingIcon=\\\"chevron-down-outline\\\"\\n      pullingText=\\\"zuletzt aktualisiert: {{ lastUpdated | date:'medium' }}\\\"\\n      refreshingSpinner=\\\"crescent\\\"\\n      refreshingText=\\\"Vorlesungen werden geladen...\\\"\\n    >\\n    </ion-refresher-content>\\n  </ion-refresher>\\n\\n  <!-- searchbar -->\\n  <ion-searchbar\\n    animated\\n    showCancelButton=\\\"focus\\\"\\n    mode=\\\"ios\\\"\\n    placeholder=\\\"Suchen...\\\"\\n    cancelButtonText=\\\"Abbrechen\\\"\\n    (ionChange)=\\\"search($event)\\\"\\n    #searchBar\\n  ></ion-searchbar>\\n\\n  <div\\n    class=\\\"examInfo__wrapper\\\"\\n    *ngIf=\\\"segment && segment.value === 'exams'\\\"\\n    routerLink=\\\"/report\\\"\\n  >\\n    <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n    <span\\n      >Falsche oder fehlende Klausur gefunden? Klicke hier, um die\\n      Klausurerkennung zu verbessern.</span\\n    >\\n  </div>\\n\\n  <!-- Segment -->\\n  <ion-segment\\n    class=\\\"segment\\\"\\n    scrollable\\n    (ionChange)=\\\"setDisplayedBlocksToSegment()\\\"\\n    mode=\\\"ios\\\"\\n    #segment\\n    value=\\\"all\\\"\\n  >\\n    <ion-segment-button value=\\\"changes\\\" *ngIf=\\\"hasChanges\\\">\\n      <ion-label>Änderungen ({{ counts[2] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"all\\\">\\n      <ion-label>Alle ({{ counts[0] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"presence\\\" *ngIf=\\\"counts[3] !== counts[0]\\\">\\n      <ion-label>Präsenz ({{ counts[3] }})</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"exams\\\">\\n      <ion-label>Klausuren ({{ counts[1] }})</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <!-- No results for search message -->\\n  <div\\n    *ngIf=\\\"displayedBlocks.length === 0 && course && blocks.length > 0\\\"\\n    class=\\\"wrapper\\\"\\n  >\\n    Deine Suche hat keine Treffer ergeben.\\n  </div>\\n\\n  <!-- No lectures message -->\\n  <div *ngIf=\\\"course && blocks.length === 0\\\" class=\\\"wrapper\\\">\\n    Für den Kurs {{ course }} sind keine Vorlesungen eingetragen.\\n  </div>\\n\\n  <div\\n    class=\\\"warning warning--clickable\\\"\\n    *ngIf=\\\"!course\\\"\\n    routerLink=\\\"/settings\\\"\\n  >\\n    <ion-icon name=\\\"alert-circle\\\"></ion-icon>\\n    <ion-label>Bitte wähle einen Kurs aus.</ion-label>\\n  </div>\\n\\n  <!-- Skeleton -->\\n  <div class=\\\"block\\\" *ngIf=\\\"!course\\\">\\n    <app-block skeleton=\\\"lecture\\\"></app-block>\\n  </div>\\n\\n  <app-block *ngFor=\\\"let block of displayedBlocks\\\" [block]=\\\"block\\\"></app-block>\\n</ion-content>\\n\\n<app-lecture-status-fab></app-lecture-status-fab>\\n\";"],"sourceRoot":"webpack:///"}